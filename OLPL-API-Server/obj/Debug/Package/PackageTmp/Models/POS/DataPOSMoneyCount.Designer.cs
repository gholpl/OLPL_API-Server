//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace OLPL_API_Server.Models.POS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private OLPL_Apps_POS_MoneyCountDataTable tableOLPL_Apps_POS_MoneyCount;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["OLPL_Apps_POS_MoneyCount"] != null)) {
                    base.Tables.Add(new OLPL_Apps_POS_MoneyCountDataTable(ds.Tables["OLPL_Apps_POS_MoneyCount"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OLPL_Apps_POS_MoneyCountDataTable OLPL_Apps_POS_MoneyCount {
            get {
                return this.tableOLPL_Apps_POS_MoneyCount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["OLPL_Apps_POS_MoneyCount"] != null)) {
                    base.Tables.Add(new OLPL_Apps_POS_MoneyCountDataTable(ds.Tables["OLPL_Apps_POS_MoneyCount"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableOLPL_Apps_POS_MoneyCount = ((OLPL_Apps_POS_MoneyCountDataTable)(base.Tables["OLPL_Apps_POS_MoneyCount"]));
            if ((initTable == true)) {
                if ((this.tableOLPL_Apps_POS_MoneyCount != null)) {
                    this.tableOLPL_Apps_POS_MoneyCount.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOLPL_Apps_POS_MoneyCount = new OLPL_Apps_POS_MoneyCountDataTable();
            base.Tables.Add(this.tableOLPL_Apps_POS_MoneyCount);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOLPL_Apps_POS_MoneyCount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OLPL_Apps_POS_MoneyCountRowChangeEventHandler(object sender, OLPL_Apps_POS_MoneyCountRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OLPL_Apps_POS_MoneyCountDataTable : global::System.Data.TypedTableBase<OLPL_Apps_POS_MoneyCountRow> {
            
            private global::System.Data.DataColumn columncountType;
            
            private global::System.Data.DataColumn columncountOperator;
            
            private global::System.Data.DataColumn columndateTrans;
            
            private global::System.Data.DataColumn columndateCount;
            
            private global::System.Data.DataColumn columncoinsPennyNumber;
            
            private global::System.Data.DataColumn columncoinsPennyValue;
            
            private global::System.Data.DataColumn columncoinsNickelNumber;
            
            private global::System.Data.DataColumn columncoinsNickelValue;
            
            private global::System.Data.DataColumn columncoinsDimeNumber;
            
            private global::System.Data.DataColumn columncoinsDimeValue;
            
            private global::System.Data.DataColumn columncoinsQuarterNumber;
            
            private global::System.Data.DataColumn columncoinsQuarterValue;
            
            private global::System.Data.DataColumn columncoinsHalfDollarNumber;
            
            private global::System.Data.DataColumn columncoinsHalfDollarValue;
            
            private global::System.Data.DataColumn columncoinsDollarNumber;
            
            private global::System.Data.DataColumn columncoinsDollarValue;
            
            private global::System.Data.DataColumn columnbillsDollarNumber;
            
            private global::System.Data.DataColumn columnbillsDollarValue;
            
            private global::System.Data.DataColumn columnbills2DollarNumber;
            
            private global::System.Data.DataColumn columnbills2DollarValue;
            
            private global::System.Data.DataColumn columnbills5DollarNumber;
            
            private global::System.Data.DataColumn columnbills5DollarValue;
            
            private global::System.Data.DataColumn columnbills10DollarNumber;
            
            private global::System.Data.DataColumn columnbills10DollarValue;
            
            private global::System.Data.DataColumn columnbills20DollarNumber;
            
            private global::System.Data.DataColumn columnbills20DollarValue;
            
            private global::System.Data.DataColumn columnrollsNickelNumber;
            
            private global::System.Data.DataColumn columnrollsNickelValue;
            
            private global::System.Data.DataColumn columnrollsDimeNumber;
            
            private global::System.Data.DataColumn columnrollsDimeValue;
            
            private global::System.Data.DataColumn columnrollsQuarterNumber;
            
            private global::System.Data.DataColumn columnrollsQuarterValue;
            
            private global::System.Data.DataColumn columntotalCounted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OLPL_Apps_POS_MoneyCountDataTable() {
                this.TableName = "OLPL_Apps_POS_MoneyCount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OLPL_Apps_POS_MoneyCountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OLPL_Apps_POS_MoneyCountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn countTypeColumn {
                get {
                    return this.columncountType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn countOperatorColumn {
                get {
                    return this.columncountOperator;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dateTransColumn {
                get {
                    return this.columndateTrans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dateCountColumn {
                get {
                    return this.columndateCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn coinsPennyNumberColumn {
                get {
                    return this.columncoinsPennyNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn coinsPennyValueColumn {
                get {
                    return this.columncoinsPennyValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn coinsNickelNumberColumn {
                get {
                    return this.columncoinsNickelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn coinsNickelValueColumn {
                get {
                    return this.columncoinsNickelValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn coinsDimeNumberColumn {
                get {
                    return this.columncoinsDimeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn coinsDimeValueColumn {
                get {
                    return this.columncoinsDimeValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn coinsQuarterNumberColumn {
                get {
                    return this.columncoinsQuarterNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn coinsQuarterValueColumn {
                get {
                    return this.columncoinsQuarterValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn coinsHalfDollarNumberColumn {
                get {
                    return this.columncoinsHalfDollarNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn coinsHalfDollarValueColumn {
                get {
                    return this.columncoinsHalfDollarValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn coinsDollarNumberColumn {
                get {
                    return this.columncoinsDollarNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn coinsDollarValueColumn {
                get {
                    return this.columncoinsDollarValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn billsDollarNumberColumn {
                get {
                    return this.columnbillsDollarNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn billsDollarValueColumn {
                get {
                    return this.columnbillsDollarValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bills2DollarNumberColumn {
                get {
                    return this.columnbills2DollarNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bills2DollarValueColumn {
                get {
                    return this.columnbills2DollarValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bills5DollarNumberColumn {
                get {
                    return this.columnbills5DollarNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bills5DollarValueColumn {
                get {
                    return this.columnbills5DollarValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bills10DollarNumberColumn {
                get {
                    return this.columnbills10DollarNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bills10DollarValueColumn {
                get {
                    return this.columnbills10DollarValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bills20DollarNumberColumn {
                get {
                    return this.columnbills20DollarNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bills20DollarValueColumn {
                get {
                    return this.columnbills20DollarValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rollsNickelNumberColumn {
                get {
                    return this.columnrollsNickelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rollsNickelValueColumn {
                get {
                    return this.columnrollsNickelValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rollsDimeNumberColumn {
                get {
                    return this.columnrollsDimeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rollsDimeValueColumn {
                get {
                    return this.columnrollsDimeValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rollsQuarterNumberColumn {
                get {
                    return this.columnrollsQuarterNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn rollsQuarterValueColumn {
                get {
                    return this.columnrollsQuarterValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totalCountedColumn {
                get {
                    return this.columntotalCounted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OLPL_Apps_POS_MoneyCountRow this[int index] {
                get {
                    return ((OLPL_Apps_POS_MoneyCountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OLPL_Apps_POS_MoneyCountRowChangeEventHandler OLPL_Apps_POS_MoneyCountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OLPL_Apps_POS_MoneyCountRowChangeEventHandler OLPL_Apps_POS_MoneyCountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OLPL_Apps_POS_MoneyCountRowChangeEventHandler OLPL_Apps_POS_MoneyCountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OLPL_Apps_POS_MoneyCountRowChangeEventHandler OLPL_Apps_POS_MoneyCountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOLPL_Apps_POS_MoneyCountRow(OLPL_Apps_POS_MoneyCountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OLPL_Apps_POS_MoneyCountRow AddOLPL_Apps_POS_MoneyCountRow(
                        string countType, 
                        string countOperator, 
                        System.DateTime dateTrans, 
                        System.DateTime dateCount, 
                        int coinsPennyNumber, 
                        decimal coinsPennyValue, 
                        int coinsNickelNumber, 
                        decimal coinsNickelValue, 
                        int coinsDimeNumber, 
                        decimal coinsDimeValue, 
                        int coinsQuarterNumber, 
                        decimal coinsQuarterValue, 
                        int coinsHalfDollarNumber, 
                        decimal coinsHalfDollarValue, 
                        int coinsDollarNumber, 
                        decimal coinsDollarValue, 
                        int billsDollarNumber, 
                        decimal billsDollarValue, 
                        int bills2DollarNumber, 
                        decimal bills2DollarValue, 
                        int bills5DollarNumber, 
                        decimal bills5DollarValue, 
                        int bills10DollarNumber, 
                        decimal bills10DollarValue, 
                        int bills20DollarNumber, 
                        decimal bills20DollarValue, 
                        int rollsNickelNumber, 
                        decimal rollsNickelValue, 
                        int rollsDimeNumber, 
                        decimal rollsDimeValue, 
                        int rollsQuarterNumber, 
                        decimal rollsQuarterValue, 
                        decimal totalCounted) {
                OLPL_Apps_POS_MoneyCountRow rowOLPL_Apps_POS_MoneyCountRow = ((OLPL_Apps_POS_MoneyCountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        countType,
                        countOperator,
                        dateTrans,
                        dateCount,
                        coinsPennyNumber,
                        coinsPennyValue,
                        coinsNickelNumber,
                        coinsNickelValue,
                        coinsDimeNumber,
                        coinsDimeValue,
                        coinsQuarterNumber,
                        coinsQuarterValue,
                        coinsHalfDollarNumber,
                        coinsHalfDollarValue,
                        coinsDollarNumber,
                        coinsDollarValue,
                        billsDollarNumber,
                        billsDollarValue,
                        bills2DollarNumber,
                        bills2DollarValue,
                        bills5DollarNumber,
                        bills5DollarValue,
                        bills10DollarNumber,
                        bills10DollarValue,
                        bills20DollarNumber,
                        bills20DollarValue,
                        rollsNickelNumber,
                        rollsNickelValue,
                        rollsDimeNumber,
                        rollsDimeValue,
                        rollsQuarterNumber,
                        rollsQuarterValue,
                        totalCounted};
                rowOLPL_Apps_POS_MoneyCountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOLPL_Apps_POS_MoneyCountRow);
                return rowOLPL_Apps_POS_MoneyCountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OLPL_Apps_POS_MoneyCountDataTable cln = ((OLPL_Apps_POS_MoneyCountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OLPL_Apps_POS_MoneyCountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncountType = base.Columns["countType"];
                this.columncountOperator = base.Columns["countOperator"];
                this.columndateTrans = base.Columns["dateTrans"];
                this.columndateCount = base.Columns["dateCount"];
                this.columncoinsPennyNumber = base.Columns["coinsPennyNumber"];
                this.columncoinsPennyValue = base.Columns["coinsPennyValue"];
                this.columncoinsNickelNumber = base.Columns["coinsNickelNumber"];
                this.columncoinsNickelValue = base.Columns["coinsNickelValue"];
                this.columncoinsDimeNumber = base.Columns["coinsDimeNumber"];
                this.columncoinsDimeValue = base.Columns["coinsDimeValue"];
                this.columncoinsQuarterNumber = base.Columns["coinsQuarterNumber"];
                this.columncoinsQuarterValue = base.Columns["coinsQuarterValue"];
                this.columncoinsHalfDollarNumber = base.Columns["coinsHalfDollarNumber"];
                this.columncoinsHalfDollarValue = base.Columns["coinsHalfDollarValue"];
                this.columncoinsDollarNumber = base.Columns["coinsDollarNumber"];
                this.columncoinsDollarValue = base.Columns["coinsDollarValue"];
                this.columnbillsDollarNumber = base.Columns["billsDollarNumber"];
                this.columnbillsDollarValue = base.Columns["billsDollarValue"];
                this.columnbills2DollarNumber = base.Columns["bills2DollarNumber"];
                this.columnbills2DollarValue = base.Columns["bills2DollarValue"];
                this.columnbills5DollarNumber = base.Columns["bills5DollarNumber"];
                this.columnbills5DollarValue = base.Columns["bills5DollarValue"];
                this.columnbills10DollarNumber = base.Columns["bills10DollarNumber"];
                this.columnbills10DollarValue = base.Columns["bills10DollarValue"];
                this.columnbills20DollarNumber = base.Columns["bills20DollarNumber"];
                this.columnbills20DollarValue = base.Columns["bills20DollarValue"];
                this.columnrollsNickelNumber = base.Columns["rollsNickelNumber"];
                this.columnrollsNickelValue = base.Columns["rollsNickelValue"];
                this.columnrollsDimeNumber = base.Columns["rollsDimeNumber"];
                this.columnrollsDimeValue = base.Columns["rollsDimeValue"];
                this.columnrollsQuarterNumber = base.Columns["rollsQuarterNumber"];
                this.columnrollsQuarterValue = base.Columns["rollsQuarterValue"];
                this.columntotalCounted = base.Columns["totalCounted"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncountType = new global::System.Data.DataColumn("countType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncountType);
                this.columncountOperator = new global::System.Data.DataColumn("countOperator", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncountOperator);
                this.columndateTrans = new global::System.Data.DataColumn("dateTrans", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateTrans);
                this.columndateCount = new global::System.Data.DataColumn("dateCount", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateCount);
                this.columncoinsPennyNumber = new global::System.Data.DataColumn("coinsPennyNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoinsPennyNumber);
                this.columncoinsPennyValue = new global::System.Data.DataColumn("coinsPennyValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoinsPennyValue);
                this.columncoinsNickelNumber = new global::System.Data.DataColumn("coinsNickelNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoinsNickelNumber);
                this.columncoinsNickelValue = new global::System.Data.DataColumn("coinsNickelValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoinsNickelValue);
                this.columncoinsDimeNumber = new global::System.Data.DataColumn("coinsDimeNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoinsDimeNumber);
                this.columncoinsDimeValue = new global::System.Data.DataColumn("coinsDimeValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoinsDimeValue);
                this.columncoinsQuarterNumber = new global::System.Data.DataColumn("coinsQuarterNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoinsQuarterNumber);
                this.columncoinsQuarterValue = new global::System.Data.DataColumn("coinsQuarterValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoinsQuarterValue);
                this.columncoinsHalfDollarNumber = new global::System.Data.DataColumn("coinsHalfDollarNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoinsHalfDollarNumber);
                this.columncoinsHalfDollarValue = new global::System.Data.DataColumn("coinsHalfDollarValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoinsHalfDollarValue);
                this.columncoinsDollarNumber = new global::System.Data.DataColumn("coinsDollarNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoinsDollarNumber);
                this.columncoinsDollarValue = new global::System.Data.DataColumn("coinsDollarValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncoinsDollarValue);
                this.columnbillsDollarNumber = new global::System.Data.DataColumn("billsDollarNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillsDollarNumber);
                this.columnbillsDollarValue = new global::System.Data.DataColumn("billsDollarValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillsDollarValue);
                this.columnbills2DollarNumber = new global::System.Data.DataColumn("bills2DollarNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbills2DollarNumber);
                this.columnbills2DollarValue = new global::System.Data.DataColumn("bills2DollarValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbills2DollarValue);
                this.columnbills5DollarNumber = new global::System.Data.DataColumn("bills5DollarNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbills5DollarNumber);
                this.columnbills5DollarValue = new global::System.Data.DataColumn("bills5DollarValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbills5DollarValue);
                this.columnbills10DollarNumber = new global::System.Data.DataColumn("bills10DollarNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbills10DollarNumber);
                this.columnbills10DollarValue = new global::System.Data.DataColumn("bills10DollarValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbills10DollarValue);
                this.columnbills20DollarNumber = new global::System.Data.DataColumn("bills20DollarNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbills20DollarNumber);
                this.columnbills20DollarValue = new global::System.Data.DataColumn("bills20DollarValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbills20DollarValue);
                this.columnrollsNickelNumber = new global::System.Data.DataColumn("rollsNickelNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrollsNickelNumber);
                this.columnrollsNickelValue = new global::System.Data.DataColumn("rollsNickelValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrollsNickelValue);
                this.columnrollsDimeNumber = new global::System.Data.DataColumn("rollsDimeNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrollsDimeNumber);
                this.columnrollsDimeValue = new global::System.Data.DataColumn("rollsDimeValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrollsDimeValue);
                this.columnrollsQuarterNumber = new global::System.Data.DataColumn("rollsQuarterNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrollsQuarterNumber);
                this.columnrollsQuarterValue = new global::System.Data.DataColumn("rollsQuarterValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrollsQuarterValue);
                this.columntotalCounted = new global::System.Data.DataColumn("totalCounted", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalCounted);
                this.columncountType.MaxLength = 2147483647;
                this.columncountOperator.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OLPL_Apps_POS_MoneyCountRow NewOLPL_Apps_POS_MoneyCountRow() {
                return ((OLPL_Apps_POS_MoneyCountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OLPL_Apps_POS_MoneyCountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OLPL_Apps_POS_MoneyCountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OLPL_Apps_POS_MoneyCountRowChanged != null)) {
                    this.OLPL_Apps_POS_MoneyCountRowChanged(this, new OLPL_Apps_POS_MoneyCountRowChangeEvent(((OLPL_Apps_POS_MoneyCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OLPL_Apps_POS_MoneyCountRowChanging != null)) {
                    this.OLPL_Apps_POS_MoneyCountRowChanging(this, new OLPL_Apps_POS_MoneyCountRowChangeEvent(((OLPL_Apps_POS_MoneyCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OLPL_Apps_POS_MoneyCountRowDeleted != null)) {
                    this.OLPL_Apps_POS_MoneyCountRowDeleted(this, new OLPL_Apps_POS_MoneyCountRowChangeEvent(((OLPL_Apps_POS_MoneyCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OLPL_Apps_POS_MoneyCountRowDeleting != null)) {
                    this.OLPL_Apps_POS_MoneyCountRowDeleting(this, new OLPL_Apps_POS_MoneyCountRowChangeEvent(((OLPL_Apps_POS_MoneyCountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOLPL_Apps_POS_MoneyCountRow(OLPL_Apps_POS_MoneyCountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OLPL_Apps_POS_MoneyCountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OLPL_Apps_POS_MoneyCountRow : global::System.Data.DataRow {
            
            private OLPL_Apps_POS_MoneyCountDataTable tableOLPL_Apps_POS_MoneyCount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OLPL_Apps_POS_MoneyCountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOLPL_Apps_POS_MoneyCount = ((OLPL_Apps_POS_MoneyCountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string countType {
                get {
                    try {
                        return ((string)(this[this.tableOLPL_Apps_POS_MoneyCount.countTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'countType\' in table \'OLPL_Apps_POS_MoneyCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.countTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string countOperator {
                get {
                    try {
                        return ((string)(this[this.tableOLPL_Apps_POS_MoneyCount.countOperatorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'countOperator\' in table \'OLPL_Apps_POS_MoneyCount\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.countOperatorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dateTrans {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOLPL_Apps_POS_MoneyCount.dateTransColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateTrans\' in table \'OLPL_Apps_POS_MoneyCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.dateTransColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime dateCount {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOLPL_Apps_POS_MoneyCount.dateCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateCount\' in table \'OLPL_Apps_POS_MoneyCount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.dateCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int coinsPennyNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.coinsPennyNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coinsPennyNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.coinsPennyNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal coinsPennyValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.coinsPennyValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coinsPennyValue\' in table \'OLPL_Apps_POS_MoneyCount\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.coinsPennyValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int coinsNickelNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.coinsNickelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coinsNickelNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.coinsNickelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal coinsNickelValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.coinsNickelValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coinsNickelValue\' in table \'OLPL_Apps_POS_MoneyCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.coinsNickelValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int coinsDimeNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.coinsDimeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coinsDimeNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.coinsDimeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal coinsDimeValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.coinsDimeValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coinsDimeValue\' in table \'OLPL_Apps_POS_MoneyCount\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.coinsDimeValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int coinsQuarterNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.coinsQuarterNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coinsQuarterNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.coinsQuarterNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal coinsQuarterValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.coinsQuarterValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coinsQuarterValue\' in table \'OLPL_Apps_POS_MoneyCount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.coinsQuarterValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int coinsHalfDollarNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.coinsHalfDollarNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coinsHalfDollarNumber\' in table \'OLPL_Apps_POS_MoneyCount\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.coinsHalfDollarNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal coinsHalfDollarValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.coinsHalfDollarValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coinsHalfDollarValue\' in table \'OLPL_Apps_POS_MoneyCount\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.coinsHalfDollarValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int coinsDollarNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.coinsDollarNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coinsDollarNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.coinsDollarNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal coinsDollarValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.coinsDollarValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'coinsDollarValue\' in table \'OLPL_Apps_POS_MoneyCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.coinsDollarValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int billsDollarNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.billsDollarNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'billsDollarNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.billsDollarNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal billsDollarValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.billsDollarValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'billsDollarValue\' in table \'OLPL_Apps_POS_MoneyCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.billsDollarValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int bills2DollarNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.bills2DollarNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bills2DollarNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.bills2DollarNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal bills2DollarValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.bills2DollarValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bills2DollarValue\' in table \'OLPL_Apps_POS_MoneyCount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.bills2DollarValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int bills5DollarNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.bills5DollarNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bills5DollarNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.bills5DollarNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal bills5DollarValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.bills5DollarValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bills5DollarValue\' in table \'OLPL_Apps_POS_MoneyCount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.bills5DollarValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int bills10DollarNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.bills10DollarNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bills10DollarNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.bills10DollarNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal bills10DollarValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.bills10DollarValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bills10DollarValue\' in table \'OLPL_Apps_POS_MoneyCount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.bills10DollarValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int bills20DollarNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.bills20DollarNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bills20DollarNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.bills20DollarNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal bills20DollarValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.bills20DollarValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bills20DollarValue\' in table \'OLPL_Apps_POS_MoneyCount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.bills20DollarValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int rollsNickelNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.rollsNickelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rollsNickelNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.rollsNickelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal rollsNickelValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.rollsNickelValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rollsNickelValue\' in table \'OLPL_Apps_POS_MoneyCount\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.rollsNickelValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int rollsDimeNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.rollsDimeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rollsDimeNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.rollsDimeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal rollsDimeValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.rollsDimeValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rollsDimeValue\' in table \'OLPL_Apps_POS_MoneyCount\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.rollsDimeValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int rollsQuarterNumber {
                get {
                    try {
                        return ((int)(this[this.tableOLPL_Apps_POS_MoneyCount.rollsQuarterNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rollsQuarterNumber\' in table \'OLPL_Apps_POS_MoneyCount\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.rollsQuarterNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal rollsQuarterValue {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.rollsQuarterValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'rollsQuarterValue\' in table \'OLPL_Apps_POS_MoneyCount\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.rollsQuarterValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal totalCounted {
                get {
                    try {
                        return ((decimal)(this[this.tableOLPL_Apps_POS_MoneyCount.totalCountedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalCounted\' in table \'OLPL_Apps_POS_MoneyCount\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOLPL_Apps_POS_MoneyCount.totalCountedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscountTypeNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.countTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcountTypeNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.countTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscountOperatorNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.countOperatorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcountOperatorNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.countOperatorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdateTransNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.dateTransColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdateTransNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.dateTransColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdateCountNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.dateCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdateCountNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.dateCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscoinsPennyNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.coinsPennyNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoinsPennyNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.coinsPennyNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscoinsPennyValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.coinsPennyValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoinsPennyValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.coinsPennyValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscoinsNickelNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.coinsNickelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoinsNickelNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.coinsNickelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscoinsNickelValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.coinsNickelValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoinsNickelValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.coinsNickelValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscoinsDimeNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.coinsDimeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoinsDimeNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.coinsDimeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscoinsDimeValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.coinsDimeValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoinsDimeValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.coinsDimeValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscoinsQuarterNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.coinsQuarterNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoinsQuarterNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.coinsQuarterNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscoinsQuarterValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.coinsQuarterValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoinsQuarterValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.coinsQuarterValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscoinsHalfDollarNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.coinsHalfDollarNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoinsHalfDollarNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.coinsHalfDollarNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscoinsHalfDollarValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.coinsHalfDollarValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoinsHalfDollarValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.coinsHalfDollarValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscoinsDollarNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.coinsDollarNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoinsDollarNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.coinsDollarNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscoinsDollarValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.coinsDollarValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcoinsDollarValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.coinsDollarValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbillsDollarNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.billsDollarNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbillsDollarNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.billsDollarNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbillsDollarValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.billsDollarValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbillsDollarValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.billsDollarValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbills2DollarNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.bills2DollarNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbills2DollarNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.bills2DollarNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbills2DollarValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.bills2DollarValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbills2DollarValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.bills2DollarValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbills5DollarNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.bills5DollarNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbills5DollarNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.bills5DollarNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbills5DollarValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.bills5DollarValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbills5DollarValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.bills5DollarValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbills10DollarNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.bills10DollarNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbills10DollarNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.bills10DollarNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbills10DollarValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.bills10DollarValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbills10DollarValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.bills10DollarValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbills20DollarNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.bills20DollarNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbills20DollarNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.bills20DollarNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isbills20DollarValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.bills20DollarValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setbills20DollarValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.bills20DollarValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrollsNickelNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.rollsNickelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrollsNickelNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.rollsNickelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrollsNickelValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.rollsNickelValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrollsNickelValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.rollsNickelValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrollsDimeNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.rollsDimeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrollsDimeNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.rollsDimeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrollsDimeValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.rollsDimeValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrollsDimeValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.rollsDimeValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrollsQuarterNumberNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.rollsQuarterNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrollsQuarterNumberNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.rollsQuarterNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrollsQuarterValueNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.rollsQuarterValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrollsQuarterValueNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.rollsQuarterValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstotalCountedNull() {
                return this.IsNull(this.tableOLPL_Apps_POS_MoneyCount.totalCountedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettotalCountedNull() {
                this[this.tableOLPL_Apps_POS_MoneyCount.totalCountedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OLPL_Apps_POS_MoneyCountRowChangeEvent : global::System.EventArgs {
            
            private OLPL_Apps_POS_MoneyCountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OLPL_Apps_POS_MoneyCountRowChangeEvent(OLPL_Apps_POS_MoneyCountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OLPL_Apps_POS_MoneyCountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace OLPL_API_Server.Models.POS.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OLPL_Apps_POS_MoneyCountTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OLPL_Apps_POS_MoneyCountTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OLPL_Apps_POS_MoneyCount";
            tableMapping.ColumnMappings.Add("countType", "countType");
            tableMapping.ColumnMappings.Add("countOperator", "countOperator");
            tableMapping.ColumnMappings.Add("dateTrans", "dateTrans");
            tableMapping.ColumnMappings.Add("dateCount", "dateCount");
            tableMapping.ColumnMappings.Add("coinsPennyNumber", "coinsPennyNumber");
            tableMapping.ColumnMappings.Add("coinsPennyValue", "coinsPennyValue");
            tableMapping.ColumnMappings.Add("coinsNickelNumber", "coinsNickelNumber");
            tableMapping.ColumnMappings.Add("coinsNickelValue", "coinsNickelValue");
            tableMapping.ColumnMappings.Add("coinsDimeNumber", "coinsDimeNumber");
            tableMapping.ColumnMappings.Add("coinsDimeValue", "coinsDimeValue");
            tableMapping.ColumnMappings.Add("coinsQuarterNumber", "coinsQuarterNumber");
            tableMapping.ColumnMappings.Add("coinsQuarterValue", "coinsQuarterValue");
            tableMapping.ColumnMappings.Add("coinsHalfDollarNumber", "coinsHalfDollarNumber");
            tableMapping.ColumnMappings.Add("coinsHalfDollarValue", "coinsHalfDollarValue");
            tableMapping.ColumnMappings.Add("coinsDollarNumber", "coinsDollarNumber");
            tableMapping.ColumnMappings.Add("coinsDollarValue", "coinsDollarValue");
            tableMapping.ColumnMappings.Add("billsDollarNumber", "billsDollarNumber");
            tableMapping.ColumnMappings.Add("billsDollarValue", "billsDollarValue");
            tableMapping.ColumnMappings.Add("bills2DollarNumber", "bills2DollarNumber");
            tableMapping.ColumnMappings.Add("bills2DollarValue", "bills2DollarValue");
            tableMapping.ColumnMappings.Add("bills5DollarNumber", "bills5DollarNumber");
            tableMapping.ColumnMappings.Add("bills5DollarValue", "bills5DollarValue");
            tableMapping.ColumnMappings.Add("bills10DollarNumber", "bills10DollarNumber");
            tableMapping.ColumnMappings.Add("bills10DollarValue", "bills10DollarValue");
            tableMapping.ColumnMappings.Add("bills20DollarNumber", "bills20DollarNumber");
            tableMapping.ColumnMappings.Add("bills20DollarValue", "bills20DollarValue");
            tableMapping.ColumnMappings.Add("rollsNickelNumber", "rollsNickelNumber");
            tableMapping.ColumnMappings.Add("rollsNickelValue", "rollsNickelValue");
            tableMapping.ColumnMappings.Add("rollsDimeNumber", "rollsDimeNumber");
            tableMapping.ColumnMappings.Add("rollsDimeValue", "rollsDimeValue");
            tableMapping.ColumnMappings.Add("rollsQuarterNumber", "rollsQuarterNumber");
            tableMapping.ColumnMappings.Add("rollsQuarterValue", "rollsQuarterValue");
            tableMapping.ColumnMappings.Add("totalCounted", "totalCounted");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [OLPL_Apps_POS_MoneyCount] ([countType], [countOperator], [dateTrans], [dateCount], [coinsPennyNumber], [coinsPennyValue], [coinsNickelNumber], [coinsNickelValue], [coinsDimeNumber], [coinsDimeValue], [coinsQuarterNumber], [coinsQuarterValue], [coinsHalfDollarNumber], [coinsHalfDollarValue], [coinsDollarNumber], [coinsDollarValue], [billsDollarNumber], [billsDollarValue], [bills2DollarNumber], [bills2DollarValue], [bills5DollarNumber], [bills5DollarValue], [bills10DollarNumber], [bills10DollarValue], [bills20DollarNumber], [bills20DollarValue], [rollsNickelNumber], [rollsNickelValue], [rollsDimeNumber], [rollsDimeValue], [rollsQuarterNumber], [rollsQuarterValue], [totalCounted]) VALUES (@countType, @countOperator, @dateTrans, @dateCount, @coinsPennyNumber, @coinsPennyValue, @coinsNickelNumber, @coinsNickelValue, @coinsDimeNumber, @coinsDimeValue, @coinsQuarterNumber, @coinsQuarterValue, @coinsHalfDollarNumber, @coinsHalfDollarValue, @coinsDollarNumber, @coinsDollarValue, @billsDollarNumber, @billsDollarValue, @bills2DollarNumber, @bills2DollarValue, @bills5DollarNumber, @bills5DollarValue, @bills10DollarNumber, @bills10DollarValue, @bills20DollarNumber, @bills20DollarValue, @rollsNickelNumber, @rollsNickelValue, @rollsDimeNumber, @rollsDimeValue, @rollsQuarterNumber, @rollsQuarterValue, @totalCounted)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@countType", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "countType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@countOperator", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "countOperator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateTrans", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateTrans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateCount", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "dateCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsPennyNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coinsPennyNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsPennyValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coinsPennyValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsNickelNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coinsNickelNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsNickelValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coinsNickelValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsDimeNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coinsDimeNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsDimeValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coinsDimeValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsQuarterNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coinsQuarterNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsQuarterValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coinsQuarterValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsHalfDollarNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coinsHalfDollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsHalfDollarValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coinsHalfDollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsDollarNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coinsDollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsDollarValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "coinsDollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billsDollarNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "billsDollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billsDollarValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "billsDollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills2DollarNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bills2DollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills2DollarValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bills2DollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills5DollarNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bills5DollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills5DollarValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bills5DollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills10DollarNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bills10DollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills10DollarValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bills10DollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills20DollarNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bills20DollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills20DollarValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bills20DollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rollsNickelNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rollsNickelNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rollsNickelValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rollsNickelValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rollsDimeNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rollsDimeNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rollsDimeValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rollsDimeValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rollsQuarterNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rollsQuarterNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rollsQuarterValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "rollsQuarterValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalCounted", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "totalCounted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["OLPL_AppsConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        OLPL_Apps_POS_MoneyCount.*\r\nFROM            OLPL_Apps_POS_MoneyCoun" +
                "t";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        OLPL_Apps_POS_MoneyCount.*\r\nFROM            OLPL_Apps_POS_MoneyCoun" +
                "t\r\nWHERE        (countType LIKE @countType) AND (dateTrans = @dateTrans)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@countType", global::System.Data.SqlDbType.Text, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "countType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateTrans", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "dateTrans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"INSERT INTO [OLPL_Apps_POS_MoneyCount] ([countType], [countOperator], [dateTrans], [dateCount], [coinsPennyNumber], [coinsPennyValue], [coinsNickelNumber], [coinsNickelValue], [coinsDimeNumber], [coinsDimeValue], [coinsQuarterNumber], [coinsQuarterValue], [coinsHalfDollarNumber], [coinsHalfDollarValue], [coinsDollarNumber], [coinsDollarValue], [billsDollarNumber], [billsDollarValue], [bills2DollarNumber], [bills2DollarValue], [bills5DollarNumber], [bills5DollarValue], [bills10DollarNumber], [bills10DollarValue], [bills20DollarNumber], [bills20DollarValue], [rollsNickelNumber], [rollsNickelValue], [rollsDimeNumber], [rollsDimeValue], [rollsQuarterNumber], [rollsQuarterValue], [totalCounted]) VALUES (@countType, @countOperator, @dateTrans, @dateCount, @coinsPennyNumber, @coinsPennyValue, @coinsNickelNumber, @coinsNickelValue, @coinsDimeNumber, @coinsDimeValue, @coinsQuarterNumber, @coinsQuarterValue, @coinsHalfDollarNumber, @coinsHalfDollarValue, @coinsDollarNumber, @coinsDollarValue, @billsDollarNumber, @billsDollarValue, @bills2DollarNumber, @bills2DollarValue, @bills5DollarNumber, @bills5DollarValue, @bills10DollarNumber, @bills10DollarValue, @bills20DollarNumber, @bills20DollarValue, @rollsNickelNumber, @rollsNickelValue, @rollsDimeNumber, @rollsDimeValue, @rollsQuarterNumber, @rollsQuarterValue, @totalCounted)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@countType", global::System.Data.SqlDbType.Text, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "countType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@countOperator", global::System.Data.SqlDbType.Text, 2147483647, global::System.Data.ParameterDirection.Input, 0, 0, "countOperator", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateTrans", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "dateTrans", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dateCount", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "dateCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsPennyNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "coinsPennyNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsPennyValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "coinsPennyValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsNickelNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "coinsNickelNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsNickelValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "coinsNickelValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsDimeNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "coinsDimeNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsDimeValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "coinsDimeValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsQuarterNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "coinsQuarterNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsQuarterValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "coinsQuarterValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsHalfDollarNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "coinsHalfDollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsHalfDollarValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "coinsHalfDollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsDollarNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "coinsDollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@coinsDollarValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "coinsDollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billsDollarNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "billsDollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@billsDollarValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "billsDollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills2DollarNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "bills2DollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills2DollarValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "bills2DollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills5DollarNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "bills5DollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills5DollarValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "bills5DollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills10DollarNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "bills10DollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills10DollarValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "bills10DollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills20DollarNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "bills20DollarNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bills20DollarValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "bills20DollarValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rollsNickelNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "rollsNickelNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rollsNickelValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "rollsNickelValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rollsDimeNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "rollsDimeNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rollsDimeValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "rollsDimeValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rollsQuarterNumber", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "rollsQuarterNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@rollsQuarterValue", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "rollsQuarterValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@totalCounted", global::System.Data.SqlDbType.Money, 8, global::System.Data.ParameterDirection.Input, 0, 0, "totalCounted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.OLPL_Apps_POS_MoneyCountDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.OLPL_Apps_POS_MoneyCountDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.OLPL_Apps_POS_MoneyCountDataTable dataTable = new DataSet1.OLPL_Apps_POS_MoneyCountDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDuplicate(DataSet1.OLPL_Apps_POS_MoneyCountDataTable dataTable, string countType, global::System.Nullable<global::System.DateTime> dateTrans) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((countType == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(countType));
            }
            if ((dateTrans.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dateTrans.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSet1.OLPL_Apps_POS_MoneyCountDataTable GetDataBy1(string countType, global::System.Nullable<global::System.DateTime> dateTrans) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((countType == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(countType));
            }
            if ((dateTrans.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dateTrans.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.OLPL_Apps_POS_MoneyCountDataTable dataTable = new DataSet1.OLPL_Apps_POS_MoneyCountDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.OLPL_Apps_POS_MoneyCountDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "OLPL_Apps_POS_MoneyCount");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string countType, 
                    string countOperator, 
                    global::System.Nullable<global::System.DateTime> dateTrans, 
                    global::System.Nullable<global::System.DateTime> dateCount, 
                    global::System.Nullable<int> coinsPennyNumber, 
                    global::System.Nullable<decimal> coinsPennyValue, 
                    global::System.Nullable<int> coinsNickelNumber, 
                    global::System.Nullable<decimal> coinsNickelValue, 
                    global::System.Nullable<int> coinsDimeNumber, 
                    global::System.Nullable<decimal> coinsDimeValue, 
                    global::System.Nullable<int> coinsQuarterNumber, 
                    global::System.Nullable<decimal> coinsQuarterValue, 
                    global::System.Nullable<int> coinsHalfDollarNumber, 
                    global::System.Nullable<decimal> coinsHalfDollarValue, 
                    global::System.Nullable<int> coinsDollarNumber, 
                    global::System.Nullable<decimal> coinsDollarValue, 
                    global::System.Nullable<int> billsDollarNumber, 
                    global::System.Nullable<decimal> billsDollarValue, 
                    global::System.Nullable<int> bills2DollarNumber, 
                    global::System.Nullable<decimal> bills2DollarValue, 
                    global::System.Nullable<int> bills5DollarNumber, 
                    global::System.Nullable<decimal> bills5DollarValue, 
                    global::System.Nullable<int> bills10DollarNumber, 
                    global::System.Nullable<decimal> bills10DollarValue, 
                    global::System.Nullable<int> bills20DollarNumber, 
                    global::System.Nullable<decimal> bills20DollarValue, 
                    global::System.Nullable<int> rollsNickelNumber, 
                    global::System.Nullable<decimal> rollsNickelValue, 
                    global::System.Nullable<int> rollsDimeNumber, 
                    global::System.Nullable<decimal> rollsDimeValue, 
                    global::System.Nullable<int> rollsQuarterNumber, 
                    global::System.Nullable<decimal> rollsQuarterValue, 
                    decimal totalCounted) {
            if ((countType == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(countType));
            }
            if ((countOperator == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(countOperator));
            }
            if ((dateTrans.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(dateTrans.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((dateCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(dateCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((coinsPennyNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(coinsPennyNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((coinsPennyValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(coinsPennyValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((coinsNickelNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(coinsNickelNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((coinsNickelValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(coinsNickelValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((coinsDimeNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(coinsDimeNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((coinsDimeValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(coinsDimeValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((coinsQuarterNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(coinsQuarterNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((coinsQuarterValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(coinsQuarterValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((coinsHalfDollarNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(coinsHalfDollarNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((coinsHalfDollarValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(coinsHalfDollarValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((coinsDollarNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(coinsDollarNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((coinsDollarValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(coinsDollarValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((billsDollarNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(billsDollarNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((billsDollarValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(billsDollarValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((bills2DollarNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(bills2DollarNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((bills2DollarValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(bills2DollarValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((bills5DollarNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(bills5DollarNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((bills5DollarValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(bills5DollarValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((bills10DollarNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(bills10DollarNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((bills10DollarValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(bills10DollarValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((bills20DollarNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(bills20DollarNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((bills20DollarValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(bills20DollarValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((rollsNickelNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(rollsNickelNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((rollsNickelValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(rollsNickelValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((rollsDimeNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(rollsDimeNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((rollsDimeValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(rollsDimeValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((rollsQuarterNumber.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((int)(rollsQuarterNumber.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((rollsQuarterValue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(rollsQuarterValue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(totalCounted));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQuery(
                    string countType, 
                    string countOperator, 
                    global::System.Nullable<global::System.DateTime> dateTrans, 
                    global::System.Nullable<global::System.DateTime> dateCount, 
                    global::System.Nullable<int> coinsPennyNumber, 
                    global::System.Nullable<decimal> coinsPennyValue, 
                    global::System.Nullable<int> coinsNickelNumber, 
                    global::System.Nullable<decimal> coinsNickelValue, 
                    global::System.Nullable<int> coinsDimeNumber, 
                    global::System.Nullable<decimal> coinsDimeValue, 
                    global::System.Nullable<int> coinsQuarterNumber, 
                    global::System.Nullable<decimal> coinsQuarterValue, 
                    global::System.Nullable<int> coinsHalfDollarNumber, 
                    global::System.Nullable<decimal> coinsHalfDollarValue, 
                    global::System.Nullable<int> coinsDollarNumber, 
                    global::System.Nullable<decimal> coinsDollarValue, 
                    global::System.Nullable<int> billsDollarNumber, 
                    global::System.Nullable<decimal> billsDollarValue, 
                    global::System.Nullable<int> bills2DollarNumber, 
                    global::System.Nullable<decimal> bills2DollarValue, 
                    global::System.Nullable<int> bills5DollarNumber, 
                    global::System.Nullable<decimal> bills5DollarValue, 
                    global::System.Nullable<int> bills10DollarNumber, 
                    global::System.Nullable<decimal> bills10DollarValue, 
                    global::System.Nullable<int> bills20DollarNumber, 
                    global::System.Nullable<decimal> bills20DollarValue, 
                    global::System.Nullable<int> rollsNickelNumber, 
                    global::System.Nullable<decimal> rollsNickelValue, 
                    global::System.Nullable<int> rollsDimeNumber, 
                    global::System.Nullable<decimal> rollsDimeValue, 
                    global::System.Nullable<int> rollsQuarterNumber, 
                    global::System.Nullable<decimal> rollsQuarterValue, 
                    global::System.Nullable<decimal> totalCounted) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((countType == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(countType));
            }
            if ((countOperator == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(countOperator));
            }
            if ((dateTrans.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(dateTrans.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((dateCount.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(dateCount.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((coinsPennyNumber.HasValue == true)) {
                command.Parameters[4].Value = ((int)(coinsPennyNumber.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((coinsPennyValue.HasValue == true)) {
                command.Parameters[5].Value = ((decimal)(coinsPennyValue.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((coinsNickelNumber.HasValue == true)) {
                command.Parameters[6].Value = ((int)(coinsNickelNumber.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((coinsNickelValue.HasValue == true)) {
                command.Parameters[7].Value = ((decimal)(coinsNickelValue.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((coinsDimeNumber.HasValue == true)) {
                command.Parameters[8].Value = ((int)(coinsDimeNumber.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((coinsDimeValue.HasValue == true)) {
                command.Parameters[9].Value = ((decimal)(coinsDimeValue.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((coinsQuarterNumber.HasValue == true)) {
                command.Parameters[10].Value = ((int)(coinsQuarterNumber.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((coinsQuarterValue.HasValue == true)) {
                command.Parameters[11].Value = ((decimal)(coinsQuarterValue.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((coinsHalfDollarNumber.HasValue == true)) {
                command.Parameters[12].Value = ((int)(coinsHalfDollarNumber.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((coinsHalfDollarValue.HasValue == true)) {
                command.Parameters[13].Value = ((decimal)(coinsHalfDollarValue.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((coinsDollarNumber.HasValue == true)) {
                command.Parameters[14].Value = ((int)(coinsDollarNumber.Value));
            }
            else {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((coinsDollarValue.HasValue == true)) {
                command.Parameters[15].Value = ((decimal)(coinsDollarValue.Value));
            }
            else {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((billsDollarNumber.HasValue == true)) {
                command.Parameters[16].Value = ((int)(billsDollarNumber.Value));
            }
            else {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((billsDollarValue.HasValue == true)) {
                command.Parameters[17].Value = ((decimal)(billsDollarValue.Value));
            }
            else {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((bills2DollarNumber.HasValue == true)) {
                command.Parameters[18].Value = ((int)(bills2DollarNumber.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((bills2DollarValue.HasValue == true)) {
                command.Parameters[19].Value = ((decimal)(bills2DollarValue.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((bills5DollarNumber.HasValue == true)) {
                command.Parameters[20].Value = ((int)(bills5DollarNumber.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((bills5DollarValue.HasValue == true)) {
                command.Parameters[21].Value = ((decimal)(bills5DollarValue.Value));
            }
            else {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((bills10DollarNumber.HasValue == true)) {
                command.Parameters[22].Value = ((int)(bills10DollarNumber.Value));
            }
            else {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((bills10DollarValue.HasValue == true)) {
                command.Parameters[23].Value = ((decimal)(bills10DollarValue.Value));
            }
            else {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((bills20DollarNumber.HasValue == true)) {
                command.Parameters[24].Value = ((int)(bills20DollarNumber.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((bills20DollarValue.HasValue == true)) {
                command.Parameters[25].Value = ((decimal)(bills20DollarValue.Value));
            }
            else {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((rollsNickelNumber.HasValue == true)) {
                command.Parameters[26].Value = ((int)(rollsNickelNumber.Value));
            }
            else {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((rollsNickelValue.HasValue == true)) {
                command.Parameters[27].Value = ((decimal)(rollsNickelValue.Value));
            }
            else {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((rollsDimeNumber.HasValue == true)) {
                command.Parameters[28].Value = ((int)(rollsDimeNumber.Value));
            }
            else {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((rollsDimeValue.HasValue == true)) {
                command.Parameters[29].Value = ((decimal)(rollsDimeValue.Value));
            }
            else {
                command.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((rollsQuarterNumber.HasValue == true)) {
                command.Parameters[30].Value = ((int)(rollsQuarterNumber.Value));
            }
            else {
                command.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((rollsQuarterValue.HasValue == true)) {
                command.Parameters[31].Value = ((decimal)(rollsQuarterValue.Value));
            }
            else {
                command.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((totalCounted.HasValue == true)) {
                command.Parameters[32].Value = ((decimal)(totalCounted.Value));
            }
            else {
                command.Parameters[32].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private OLPL_Apps_POS_MoneyCountTableAdapter _oLPL_Apps_POS_MoneyCountTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OLPL_Apps_POS_MoneyCountTableAdapter OLPL_Apps_POS_MoneyCountTableAdapter {
            get {
                return this._oLPL_Apps_POS_MoneyCountTableAdapter;
            }
            set {
                this._oLPL_Apps_POS_MoneyCountTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._oLPL_Apps_POS_MoneyCountTableAdapter != null) 
                            && (this._oLPL_Apps_POS_MoneyCountTableAdapter.Connection != null))) {
                    return this._oLPL_Apps_POS_MoneyCountTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._oLPL_Apps_POS_MoneyCountTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._oLPL_Apps_POS_MoneyCountTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OLPL_Apps_POS_MoneyCount.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oLPL_Apps_POS_MoneyCountTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._oLPL_Apps_POS_MoneyCountTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OLPL_Apps_POS_MoneyCount.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oLPL_Apps_POS_MoneyCountTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._oLPL_Apps_POS_MoneyCountTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OLPL_Apps_POS_MoneyCount.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oLPL_Apps_POS_MoneyCountTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._oLPL_Apps_POS_MoneyCountTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oLPL_Apps_POS_MoneyCountTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._oLPL_Apps_POS_MoneyCountTableAdapter != null)) {
                    revertConnections.Add(this._oLPL_Apps_POS_MoneyCountTableAdapter, this._oLPL_Apps_POS_MoneyCountTableAdapter.Connection);
                    this._oLPL_Apps_POS_MoneyCountTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._oLPL_Apps_POS_MoneyCountTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._oLPL_Apps_POS_MoneyCountTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oLPL_Apps_POS_MoneyCountTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oLPL_Apps_POS_MoneyCountTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._oLPL_Apps_POS_MoneyCountTableAdapter != null)) {
                    this._oLPL_Apps_POS_MoneyCountTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._oLPL_Apps_POS_MoneyCountTableAdapter]));
                    this._oLPL_Apps_POS_MoneyCountTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591